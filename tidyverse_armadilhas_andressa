
#######https://www.sharpsightlabs.com/blog/mutate-in-r/
select() selects columns from data
filter() subsets rows of data
group_by() aggregates data
summarise() summarises data (calculating summary statistics)
arrange() sorts data
mutate() creates new variables

##################################################################

######## TIDY DATA (transformando colunas excessivas de uma mesma variável em 2 coluna, 1 com os valores e outra com os nomes das colunas
data_tidy <- data %>% 
  pivot_longer(names_to = "year",     #conterá os nomes das colunas orig
               values_to = "score",   #conterá os valores
               values_drop_na = TRUE  #expliciar que há ausencias nos dados
               cols = -local,         #tidy todas as colunas menos essa ou:
               #cols = c(3:40),
               names_transform = list(year = as.integer)) #assim os anos que são números, serão lidos como valores e não texto
  #Há tbm o inverso, se você coloca uma coluna para tipos de variáveis (ex:escalas) que deveriam ter cada uma sua própia coluna
  table2 %>%
    pivot_wider(names_from = escalas, values_from = count)

####### filtrando              
drinks_smaller <- drinks %>% 
  filter(country %in% c("USA", "China", "Italy", "Saudi Arabia")) %>% #filtra so esses países
  select(-total_litres_of_pure_alcohol) %>%                           #seleciona todas col menos essa
  rename(beer = beer_servings, spirit = spirit_servings, wine = wine_servings)      #renomeia pra nome mais facil

###### To COMBINE the tidied versions of table4a and table4b into a single tibble dplyr::left_join()
tidy4a <- table4a %>%  #primeiro tidied
  pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "cases")
tidy4b <- table4b %>% 
  pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "population")
left_join(tidy4a, tidy4b, by="local") #depois combina
      #it preserves the original observations even when there isn’t a match. The left join should be your default join  
  ####### RELATIONAL DATA (multiplas tabelas com dados relacionados ex: matrix de sp e de ambientais
  #https://r4ds.had.co.nz/relational-data.html
  ### KEY variavel que identifica a observação unica
#An inner join keeps observations that appear in both tables
x %>% 
  inner_join(y, by = "key")
#A left join keeps all observations in x(add NA on col y). Default pois add mantendo a quantidade de linhas original
#A right join keeps all observations in y(add NA on col x).
#A full join keeps all observations in x and y (add lines to do it).
#by = NULL, uses all variables that appear in both tables, the so called natural join (default)
#by = c("a" = "b"). This will match variable a in table x to variable b in table y (2col que representam =var mas com nomes =!)




###############################################################################################################

######## https://juliasilge.com/blog/crop-yields/
######## How bettles abundance are vary with changing traps

#chamando dados
andressa <- read.table(file = "clipboard", sep = "\t", header=TRUE)
str(andressa) #Variables: trap.plot	category 	species		relative.abundance


library(tidyverse)

#########https://juliasilge.com/blog/bird-baths/

######## How bettles abundance are vary with changing traps

andressa <- read.table(file = "clipboard", sep = "\t", header=TRUE)
str(andressa) #Variables: trap.plot	category 	species		relative.abundance

andressa_parsed <-
  andressa %>%
  group_by(trap.plot, species) %>%
    summarise(relative.abund = mean(relative.abund), .groups = "drop")

p1 <-
  andressa_parsed %>%
  ggplot(aes(relative.abund, species)) +
  geom_segment(
    data = andressa_parsed %>%
      pivot_wider(
        names_from = trap.plot,
        values_from = relative.abund
      ),
    aes(x = PITFALL, xend = FIT, y = species, yend = species),
    alpha = 0.7, color = "gray70", size = 1.5
  ) +
  geom_point(aes(color = trap.plot), size = 3) +
  #scale_x_continuous(labels = scales::percent) +
  labs(x = "Relative abundance of bettles", y = NULL, color = NULL)

p1

#https://ggplot2.tidyverse.org/reference/geom_point.html

andressa_parsed <-
  andressa %>%
  group_by(trap.plot, ABC, species)
  
p3 <-
  andressa_parsed %>%
  ggplot(aes(relative.abundance, species)) +
  geom_point(aes(shape= factor(ABC)))
	geom_segment(
    data = andressa_parsed %>%
      pivot_wider(
        names_from = trap.plot,
        values_from = relative.abundance
      ),
    aes(x = PITFALL, xend = FIT, y = species, yend = species),
    alpha = 0.7, color = "gray70", size = 1.5
  ) +
  geom_point(aes(color = trap.plot), size = 3) +
  #scale_x_continuous(labels = scales::percent) +
  labs(x = "Relative abundance of bettles", y = NULL, color = NULL)

p3

p3 <-
  andressa_parsed %>%
  ggplot(aes(relative.abundance, species)) +
  	#geom_segment(
    #data = andressa_parsed %>%
     # pivot_wider(
      #  names_from = trap.plot,
       # values_from = relative.abundance
      #),
    #aes(x = PITFALL, xend = FIT, y = species, yend = species),
    #alpha = 0.7, color = "gray70", size = 1.5
  #) +
geom_point(aes(shape= trap.plot), size=4) +    #https://ggplot2.tidyverse.org/reference/geom_point.html
geom_point(aes(color = ABC), size = 2) +	#https://ggplot2.tidyverse.org/reference/layer.html
	
  #scale_x_continuous(labels = scales::percent) +
  labs(x = "Relative abundance of bettles ar BR319", y = NULL, color = NULL)+
	theme_bw() +
  theme(panel.grid.minor = element_blank())

p3


library(tidymodels)

andressa_preds <-
  andressa %>%
  group_by(trap.plot, species) %>%
    summarise(relative.abund = mean(relative.abundance), 
	sd.abund= sd(relative.abundance),
	min.abund = min(relative.abundance), 
	max.abund = max(relative.abundance) )
#.groups = "drop") #esse codigo elimina as demais variáveis nao agrugadas

p2 <-
  andressa_preds %>%
  ggplot(aes(abundA, species, color = trap.plot)) +	
  geom_errorbar(aes(
    xmin = min,
    xmax = abundC
  ),
  width = .2, size = 1.2, alpha = 0.5
  ) +
  geom_point(size = 2.5) +
  #scale_x_continuous(labels = scales::percent) +
  labs(x = "Relative abundance of bettles BR319", y = NULL, color = NULL) +
	theme_bw() +
  theme(panel.grid.minor = element_blank())

p2




